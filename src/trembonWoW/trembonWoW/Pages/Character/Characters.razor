@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using trembonWoW.Core.Models
@using trembonWoW.Core.Services

@page "/"
@attribute [Authorize]
@rendermode InteractiveServer

@inject ICharacterService characterService

<PageTitle>My Character</PageTitle>

<MudTable Items="@characters" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@isLoading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Level</MudTh>
        <MudTh>Race</MudTh>
        <MudTh>Class</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Level">@context.Level</MudTd>
        <MudTd DataLabel="Race">@context.Race</MudTd>
        <MudTd DataLabel="Class">@context.Class</MudTd>
    </RowTemplate>
</MudTable>

@code{
    private IEnumerable<Character> characters = [];
    private bool isLoading = true;

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        int? accountId = await authenticationState.GetClaimsValue(ClaimTypes.NameIdentifier, 0);
        characters = await characterService.GetAllForAccount(accountId ?? 0);
        isLoading = false;
    }
}